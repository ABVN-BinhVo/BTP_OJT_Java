sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/UIComponent","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/m/MessageToast","sap/ui/model/json/JSONModel","sap/ui/model/odata/OperationMode"],(e,t,o,a,n,r,l)=>{"use strict";return e.extend("ojtjava.controller.EmployeeList",{onInit:async function(){let e=this.getView().getModel();var o=t.getRouterFor(this);o.getRoute("EmployeeList").attachPatternMatched(this._onRouteMatched,this);if(!e){console.log("Model not found, creating manually");e=new sap.ui.model.odata.v4.ODataModel({serviceUrl:"/odata/v4/employee/",synchronizationMode:"None",operationMode:sap.ui.model.odata.OperationMode.Server});this.getView().setModel(e)}if(e){console.log("OData model available");try{const t=e.bindList("/Employees");t.requestContexts(0,100).then(e=>{console.log("Data loaded:",e.length,"employees");n.show(`Loaded ${e.length} employees`)}).catch(e=>{console.error("Error loading data:",e)})}catch(e){console.error("Error creating binding:",e)}}else{console.error("Model not available - check manifest.json and service URL")}try{const[e,t]=await Promise.all([fetch("/odata/v4/employee/Departments"),fetch("/odata/v4/employee/Roles")]);const o=await e.json();const a=await t.json();o.value.unshift({ID:"",name:"All Departments"});a.value.unshift({ID:"",name:"All Roles"});this.getView().setModel(new r(o.value),"departments");this.getView().setModel(new r(a.value),"roles")}catch(e){n.show("Error loading filter data")}},_onRouteMatched:function(){var e=this.byId("employeeTable");if(e){var t=e.getBinding("items");if(t){t.refresh()}}},onDepartmentFilterChange:function(){this._applyFilters()},onRoleFilterChange:function(){this._applyFilters()},_applyFilters:function(){var e=this.byId("departmentFilter");var t=this.byId("roleFilter");var n=this.byId("employeeTable");var r=n.getBinding("items");var l=[];var i=e.getSelectedKey();var s=t.getSelectedKey();if(i){l.push(new o("department/ID",a.EQ,i));console.log("Filtering for department:",i,"role:",s);r.filter(l);r.refresh()}if(s){l.push(new o("role/ID",a.EQ,s));console.log("Filtering for department:",i,"role:",s);r.filter(l);r.refresh()}r.filter(l)},onEmployeePress:function(e){var o=e.getSource();var a=o.data("id");t.getRouterFor(this).navTo("EmployeeInfo",{id:a})},onNavToInputForm:function(){t.getRouterFor(this).navTo("EmployeeInfo",{id:"new"})},onNavToEmployeeList:function(){t.getRouterFor(this).navTo("EmployeeList")}})});
//# sourceMappingURL=EmployeeList.controller.js.map