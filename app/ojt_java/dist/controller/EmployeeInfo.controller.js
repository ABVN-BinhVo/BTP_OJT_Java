sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/UIComponent","sap/ui/model/json/JSONModel","sap/m/MessageToast","sap/m/MessageBox","sap/ui/core/Fragment","sap/ui/core/ValueState"],(e,t,a,o,i,r,n)=>{"use strict";return e.extend("ojtjava.controller.EmployeeInfo",{onInit:function(){var e=t.getRouterFor(this);e.getRoute("EmployeeInfo").attachPatternMatched(this._onRouteMatched,this);this.oValidationModel=new a({firstNameState:n.None,firstNameStateText:"",lastNameState:n.None,lastNameStateText:"",emailState:n.None,emailStateText:"",hireDateState:n.None,hireDateStateText:"",roleState:n.None,roleStateText:"",departmentState:n.None,departmentStateText:""});this.getView().setModel(this.oValidationModel,"validation")},_onRouteMatched:async function(e){var t=e.getParameter("arguments").id;this._resetValidationStates();try{const[e,t]=await Promise.all([fetch("/odata/v4/employee/Roles"),fetch("/odata/v4/employee/Departments")]);const o=await e.json();const i=await t.json();this.getView().setModel(new a(o.value),"roles");this.getView().setModel(new a(i.value),"departments")}catch(e){o.show("Error loading roles or departments")}if(t==="new"){this._setupNewEmployee();return}try{const e=await fetch(`/odata/v4/employee/Employees(${encodeURIComponent(t)})?$expand=role,department`);if(!e.ok)throw new Error("Employee not found");const o=await e.json();this.getView().setModel(new a(o),"employee")}catch(e){o.show("Error loading employee")}},_setupNewEmployee:function(){var e={ID:"",firstName:"",lastName:"",email:"",hireDate:"",salary:"",role:{ID:"",name:""},department:{ID:"",name:""}};this.getView().setModel(new a(e),"employee")},_resetValidationStates:function(){this.oValidationModel.setData({firstNameState:n.None,firstNameStateText:"",lastNameState:n.None,lastNameStateText:"",emailState:n.None,emailStateText:"",hireDateState:n.None,hireDateStateText:"",roleState:n.None,roleStateText:"",departmentState:n.None,departmentStateText:""})},validateForm:function(){var e=this.getView().getModel("employee").getData();var t=this.oValidationModel.getData();var a=true;if(!e.firstName||e.firstName.trim()===""){t.firstNameState=n.Error;t.firstNameStateText="First name is required";a=false}else{t.firstNameState=n.None;t.firstNameStateText=""}if(!e.lastName||e.lastName.trim()===""){t.lastNameState=n.Error;t.lastNameStateText="Last name is required";a=false}else{t.lastNameState=n.None;t.lastNameStateText=""}if(!e.email||e.email.trim()===""){t.emailState=n.Error;t.emailStateText="Email is required";a=false}else if(!e.email.includes("@")){t.emailState=n.Error;t.emailStateText="Email must contain @";a=false}else{t.emailState=n.None;t.emailStateText=""}if(!e.hireDate){t.hireDateState=n.Error;t.hireDateStateText="Hire date is required";a=false}else{t.hireDateState=n.None;t.hireDateStateText=""}if(!e.role||!e.role.ID){t.roleState=n.Error;t.roleStateText="Role is required";a=false}else{t.roleState=n.None;t.roleStateText=""}if(!e.department||!e.department.ID){t.departmentState=n.Error;t.departmentStateText="Department is required";a=false}else{t.departmentState=n.None;t.departmentStateText=""}this.oValidationModel.setData(t);this.oValidationModel.refresh(true);return a},onSubmit:function(){if(!this.validateForm()){i.error("Please fill in all required fields correctly before submitting.");return}if(!this._oConfirmDialog){r.load({id:this.getView().getId(),name:"ojtjava.view.fragment.ConfirmationDialog",controller:this}).then(function(e){this._oConfirmDialog=e;this.getView().addDependent(e);e.open()}.bind(this))}else{this._oConfirmDialog.open()}},onConfirmSubmit:async function(){this._oConfirmDialog.close();var e=this.getView().getModel("employee").getData();var a=!e.ID;var r={firstName:e.firstName,lastName:e.lastName,email:e.email,hireDate:e.hireDate,role_ID:e.role&&e.role.ID?e.role.ID:null,department_ID:e.department&&e.department.ID?e.department.ID:null};if(!a)r.ID=e.ID;Object.keys(r).forEach(e=>{if(r[e]===null||r[e]==="")delete r[e]});var n=a?"/odata/v4/employee/Employees":`/odata/v4/employee/Employees(${e.ID})`;var l=a?"POST":"PATCH";try{var s=await fetch(n,{method:l,headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!s.ok){let e="Failed to save employee";try{e=(await s.json()).error.message}catch(e){}throw new Error(e)}o.show("Employee saved successfully");t.getRouterFor(this).navTo("EmployeeList")}catch(e){i.error("Error saving employee: "+e.message)}},onCancelSubmit:function(){this._oConfirmDialog.close()},onNavToInputForm:function(){t.getRouterFor(this).navTo("EmployeeInfo",{id:"new"})},onNavToEmployeeList:function(){t.getRouterFor(this).navTo("EmployeeList")}})});
//# sourceMappingURL=EmployeeInfo.controller.js.map