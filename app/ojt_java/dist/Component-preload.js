//@ui5-bundle ojtjava/Component-preload.js
sap.ui.require.preload({
	"ojtjava/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","ojtjava/model/models"],(e,t)=>{"use strict";return e.extend("ojtjava.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},init(){e.prototype.init.apply(this,arguments);this.setModel(t.createDeviceModel(),"device");this.getRouter().initialize()}})});
},
	"ojtjava/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast"],function(o,t){"use strict";return o.extend("ojtjava.controller.App",{onInit:function(){const o=this.getOwnerComponent();console.log("Component:",o);if(o){console.log("Router from component:",o.getRouter())}},onNavToInputForm:function(){const o=this.getOwnerComponent();if(o&&o.getRouter){const e=o.getRouter();e.navTo("EmployeeInfo");t.show("Navigating to Employee Info",{duration:3e3,at:"center bottom"})}else{console.error("Component or router not found!");t.show("Component or router not found!")}},onNavToEmployeeList:function(){const o=this.getOwnerComponent();if(o&&o.getRouter){const e=o.getRouter();e.navTo("EmployeeList");t.show("Navigating to Employee List")}else{console.error("Component or router not found!");t.show("Component or router not found!")}}})});
},
	"ojtjava/controller/EmployeeInfo.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/UIComponent","sap/ui/model/json/JSONModel","sap/m/MessageToast","sap/m/MessageBox","sap/ui/core/Fragment","sap/ui/core/ValueState"],(e,t,a,o,i,r,n)=>{"use strict";return e.extend("ojtjava.controller.EmployeeInfo",{onInit:function(){var e=t.getRouterFor(this);e.getRoute("EmployeeInfo").attachPatternMatched(this._onRouteMatched,this);this.oValidationModel=new a({firstNameState:n.None,firstNameStateText:"",lastNameState:n.None,lastNameStateText:"",emailState:n.None,emailStateText:"",hireDateState:n.None,hireDateStateText:"",roleState:n.None,roleStateText:"",departmentState:n.None,departmentStateText:""});this.getView().setModel(this.oValidationModel,"validation")},_onRouteMatched:async function(e){var t=e.getParameter("arguments").id;this._resetValidationStates();try{const[e,t]=await Promise.all([fetch("/odata/v4/employee/Roles"),fetch("/odata/v4/employee/Departments")]);const o=await e.json();const i=await t.json();this.getView().setModel(new a(o.value),"roles");this.getView().setModel(new a(i.value),"departments")}catch(e){o.show("Error loading roles or departments")}if(t==="new"){this._setupNewEmployee();return}try{const e=await fetch(`/odata/v4/employee/Employees(${encodeURIComponent(t)})?$expand=role,department`);if(!e.ok)throw new Error("Employee not found");const o=await e.json();this.getView().setModel(new a(o),"employee")}catch(e){o.show("Error loading employee")}},_setupNewEmployee:function(){var e={ID:"",firstName:"",lastName:"",email:"",hireDate:"",salary:"",role:{ID:"",name:""},department:{ID:"",name:""}};this.getView().setModel(new a(e),"employee")},_resetValidationStates:function(){this.oValidationModel.setData({firstNameState:n.None,firstNameStateText:"",lastNameState:n.None,lastNameStateText:"",emailState:n.None,emailStateText:"",hireDateState:n.None,hireDateStateText:"",roleState:n.None,roleStateText:"",departmentState:n.None,departmentStateText:""})},validateForm:function(){var e=this.getView().getModel("employee").getData();var t=this.oValidationModel.getData();var a=true;if(!e.firstName||e.firstName.trim()===""){t.firstNameState=n.Error;t.firstNameStateText="First name is required";a=false}else{t.firstNameState=n.None;t.firstNameStateText=""}if(!e.lastName||e.lastName.trim()===""){t.lastNameState=n.Error;t.lastNameStateText="Last name is required";a=false}else{t.lastNameState=n.None;t.lastNameStateText=""}if(!e.email||e.email.trim()===""){t.emailState=n.Error;t.emailStateText="Email is required";a=false}else if(!e.email.includes("@")){t.emailState=n.Error;t.emailStateText="Email must contain @";a=false}else{t.emailState=n.None;t.emailStateText=""}if(!e.hireDate){t.hireDateState=n.Error;t.hireDateStateText="Hire date is required";a=false}else{t.hireDateState=n.None;t.hireDateStateText=""}if(!e.role||!e.role.ID){t.roleState=n.Error;t.roleStateText="Role is required";a=false}else{t.roleState=n.None;t.roleStateText=""}if(!e.department||!e.department.ID){t.departmentState=n.Error;t.departmentStateText="Department is required";a=false}else{t.departmentState=n.None;t.departmentStateText=""}this.oValidationModel.setData(t);this.oValidationModel.refresh(true);return a},onSubmit:function(){if(!this.validateForm()){i.error("Please fill in all required fields correctly before submitting.");return}if(!this._oConfirmDialog){r.load({id:this.getView().getId(),name:"ojtjava.view.fragment.ConfirmationDialog",controller:this}).then(function(e){this._oConfirmDialog=e;this.getView().addDependent(e);e.open()}.bind(this))}else{this._oConfirmDialog.open()}},onConfirmSubmit:async function(){this._oConfirmDialog.close();var e=this.getView().getModel("employee").getData();var a=!e.ID;var r={firstName:e.firstName,lastName:e.lastName,email:e.email,hireDate:e.hireDate,role_ID:e.role&&e.role.ID?e.role.ID:null,department_ID:e.department&&e.department.ID?e.department.ID:null};if(!a)r.ID=e.ID;Object.keys(r).forEach(e=>{if(r[e]===null||r[e]==="")delete r[e]});var n=a?"/odata/v4/employee/Employees":`/odata/v4/employee/Employees(${e.ID})`;var l=a?"POST":"PATCH";try{var s=await fetch(n,{method:l,headers:{"Content-Type":"application/json"},body:JSON.stringify(r)});if(!s.ok){let e="Failed to save employee";try{e=(await s.json()).error.message}catch(e){}throw new Error(e)}o.show("Employee saved successfully");t.getRouterFor(this).navTo("EmployeeList")}catch(e){i.error("Error saving employee: "+e.message)}},onCancelSubmit:function(){this._oConfirmDialog.close()},onNavToInputForm:function(){t.getRouterFor(this).navTo("EmployeeInfo",{id:"new"})},onNavToEmployeeList:function(){t.getRouterFor(this).navTo("EmployeeList")}})});
},
	"ojtjava/controller/EmployeeList.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/ui/core/UIComponent","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/m/MessageToast","sap/ui/model/json/JSONModel","sap/ui/model/odata/OperationMode"],(e,t,o,a,n,r,l)=>{"use strict";return e.extend("ojtjava.controller.EmployeeList",{onInit:async function(){let e=this.getView().getModel();var o=t.getRouterFor(this);o.getRoute("EmployeeList").attachPatternMatched(this._onRouteMatched,this);if(!e){console.log("Model not found, creating manually");e=new sap.ui.model.odata.v4.ODataModel({serviceUrl:"/odata/v4/employee/",synchronizationMode:"None",operationMode:sap.ui.model.odata.OperationMode.Server});this.getView().setModel(e)}if(e){console.log("OData model available");try{const t=e.bindList("/Employees");t.requestContexts(0,100).then(e=>{console.log("Data loaded:",e.length,"employees");n.show(`Loaded ${e.length} employees`)}).catch(e=>{console.error("Error loading data:",e)})}catch(e){console.error("Error creating binding:",e)}}else{console.error("Model not available - check manifest.json and service URL")}try{const[e,t]=await Promise.all([fetch("/odata/v4/employee/Departments"),fetch("/odata/v4/employee/Roles")]);const o=await e.json();const a=await t.json();o.value.unshift({ID:"",name:"All Departments"});a.value.unshift({ID:"",name:"All Roles"});this.getView().setModel(new r(o.value),"departments");this.getView().setModel(new r(a.value),"roles")}catch(e){n.show("Error loading filter data")}},_onRouteMatched:function(){var e=this.byId("employeeTable");if(e){var t=e.getBinding("items");if(t){t.refresh()}}},onDepartmentFilterChange:function(){this._applyFilters()},onRoleFilterChange:function(){this._applyFilters()},_applyFilters:function(){var e=this.byId("departmentFilter");var t=this.byId("roleFilter");var n=this.byId("employeeTable");var r=n.getBinding("items");var l=[];var i=e.getSelectedKey();var s=t.getSelectedKey();if(i){l.push(new o("department/ID",a.EQ,i));console.log("Filtering for department:",i,"role:",s);r.filter(l);r.refresh()}if(s){l.push(new o("role/ID",a.EQ,s));console.log("Filtering for department:",i,"role:",s);r.filter(l);r.refresh()}r.filter(l)},onEmployeePress:function(e){var o=e.getSource();var a=o.data("id");t.getRouterFor(this).navTo("EmployeeInfo",{id:a})},onNavToInputForm:function(){t.getRouterFor(this).navTo("EmployeeInfo",{id:"new"})},onNavToEmployeeList:function(){t.getRouterFor(this).navTo("EmployeeList")}})});
},
	"ojtjava/controller/OJT_Java.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("ojtjava.controller.OJT_Java",{onInit(){}})});
},
	"ojtjava/i18n/i18n.properties":'# This is the resource bundle for ojtjava\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=App Title\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n#XTIT: Main view title\ntitle=App Title',
	"ojtjava/manifest.json":'{"_version":"1.65.0","sap.app":{"id":"ojtjava","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.18.1","toolsId":"1557736b-4709-46aa-9f84-4d87f86a16d1"},"dataSources":{"mainService":{"uri":"/odata/v4/employee/","type":"OData","settings":{"annotations":[],"odataVersion":"4.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":true,"dependencies":{"minUI5Version":"1.136.2","libs":{"sap.m":{},"sap.ui.core":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"ojtjava.i18n.i18n"}},"":{"dataSource":"mainService","preload":true,"settings":{"operationMode":"Server","autoExpandSelect":true,"earlyRequests":true}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"ojtjava.view","async":true,"viewPath":"ojtjava.view"},"routes":[{"name":"EmployeeList","pattern":":?query:","target":["EmployeeList"]},{"name":"EmployeeInfo","pattern":"EmployeeInfo/{id}","target":["EmployeeInfo"]}],"targets":{"EmployeeList":{"id":"EmployeeList","name":"EmployeeList"},"EmployeeInfo":{"id":"EmployeeInfo","name":"EmployeeInfo"}}},"rootView":{"viewName":"ojtjava.view.App","type":"XML","id":"App","async":true}}}',
	"ojtjava/model/models.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,n){"use strict";return{createDeviceModel:function(){var i=new e(n);i.setDefaultBindingMode("OneWay");return i}}});
},
	"ojtjava/view/App.view.xml":'<mvc:View controllerName="ojtjava.controller.App"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"><App id="app"><pages><Page id="page" title="Employee Management"><customHeader><core:Fragment id="headerFragment" fragmentName="ojtjava.view.fragment.Header" type="XML"/></customHeader><content></content></Page></pages></App></mvc:View>',
	"ojtjava/view/EmployeeInfo.view.xml":'<mvc:View\n    controllerName="ojtjava.controller.EmployeeInfo"\n    xmlns="sap.m"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:core="sap.ui.core"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:l="sap.m"\n    xmlns:u="sap.m.upload"><Page id="employeeInfoPage" title="Employee Information"><customHeader><core:Fragment fragmentName="ojtjava.view.fragment.Header" type="XML"/></customHeader><content><f:SimpleForm id="employeeInfoForm"\n                editable="true"\n                layout="ResponsiveGridLayout"\n                title="Employee Information"\n                labelSpanXL="3" labelSpanL="3" labelSpanM="3" labelSpanS="12"\n                adjustLabelSpan="false"\n                emptySpanXL="4" emptySpanL="4" emptySpanM="4" emptySpanS="0"\n                columnsXL="1" columnsL="1" columnsM="1"\n                singleContainerFullSize="false"\n                class="sapUiResponsiveMargin"><f:content><Label id="firstNameLabel" text="First Name" required="true"/><Input id="firstNameInput"\n        value="{employee>/firstName}" \n        valueState="{validation>/firstNameState}"\n        valueStateText="{validation>/firstNameStateText}"\n        placeholder="Enter first name" \n        width="100%" \n        required="true"/><Label id="lastNameLabel" text="Last Name" required="true"/><Input id="lastNameInput"\n        value="{employee>/lastName}" \n        valueState="{validation>/lastNameState}"\n        valueStateText="{validation>/lastNameStateText}"\n        placeholder="Enter last name" \n        width="100%" \n        required="true"/><Label id="emailLabel" text="Email" required="true"/><Input id="emailInput"\n        value="{employee>/email}"\n        valueState="{validation>/emailState}" \n        valueStateText="{validation>/emailStateText}" \n        placeholder="Enter email address" \n        width="100%" \n        type="Email"\n        required="true"/><Label id="hireDateLabel" text="Hire Date" required="true"/><DatePicker id="hireDatePicker"\n        value="{employee>/hireDate}"\n        valueState="{validation>/hireDateState}" \n        valueStateText="{validation>/hireDateStateText}" \n        width="100%" \n        displayFormat="dd MMM yyyy"\n        valueFormat="yyyy-MM-dd"\n        required="true"/><Label id="roleLabel" text="Role" required="true"/><ComboBox id="roleComboBox"\n        width="100%" \n        selectedKey="{employee>/role/ID}"\n        valueState="{validation>/roleState}" \n        valueStateText="{validation>/roleStateText}"\n        required="true"\n        items="{\n            path: \'roles>/\',\n            templateShareable: false\n        }"><core:Item id="roleItem" key="{roles>ID}" text="{roles>name}"/></ComboBox><Label id="departmentLabel" text="Department" required="true"/><ComboBox id="departmentComboBox"\n        width="100%"\n        selectedKey="{employee>/department/ID}"\n        valueState="{validation>/departmentState}" \n        valueStateText="{validation>/departmentStateText}"\n        required="true"\n        items="{\n            path: \'departments>/\',\n            templateShareable: false\n        }"><core:Item id="departmentItem" key="{departments>ID}" text="{departments>name}"/></ComboBox><Label id="salaryLabel" text="Salary"/><Input id="salaryInput"\n        value="{employee>/salary}" \n        width="100%" \n        editable="false"/><Label id="submitButtonLabel" text=""/><Button id="submitButton" text="Submit" type="Emphasized" press="onSubmit" class="sapUiMediumMarginTop"/></f:content></f:SimpleForm></content></Page></mvc:View>',
	"ojtjava/view/EmployeeList.view.xml":'<mvc:View\n    controllerName="ojtjava.controller.EmployeeList"\n    xmlns="sap.m"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns:core="sap.ui.core"><Page id="employeeListPage" title="Employee List"><customHeader><core:Fragment fragmentName="ojtjava.view.fragment.Header" type="XML"/></customHeader><content><VBox id="employeeListVBox" class="sapUiResponsiveMargin"><Title id="employeeListTitle" text="Employee List" titleStyle="H3" class="sapUiSmallMarginBottom"/><HBox id="departmentFilterHBox" alignItems="Center" class="sapUiSmallMarginBottom"><Label id="departmentFilterLabel" text="Department" width="100px" textAlign="End" class="sapUiTinyMarginEnd"/><ComboBox id="departmentFilter" change="onDepartmentFilterChange" width="300px" items="{departments>/}"><core:Item id="departmentFilterItem" key="{departments>ID}" text="{departments>name}"/></ComboBox></HBox><HBox id="roleFilterHBox" alignItems="Center" class="sapUiSmallMarginBottom"><Label id="roleFilterLabel" text="Role" width="100px" textAlign="End" class="sapUiTinyMarginEnd"/><ComboBox id="roleFilter" change="onRoleFilterChange" width="300px" items="{roles>/}"><core:Item id="roleFilterItem" key="{roles>ID}" text="{roles>name}"/></ComboBox></HBox><Table\n                    id="employeeTable"\n                    items="{path: \'/Employees\', parameters: { $expand: \'department,role\' }}"\n                    alternateRowColors="true"\n                    fixedLayout="false"\n                    width="100%"><columns><Column id="departmentColumn"><Text id="departmentColumnText" text="Department"/></Column><Column id="firstNameColumn"><Text id="firstNameColumnText" text="First Name"/></Column><Column id="lastNameColumn"><Text id="lastNameColumnText" text="Last Name"/></Column><Column id="emailColumn"><Text id="emailColumnText" text="Email"/></Column><Column id="roleColumn"><Text id="roleColumnText" text="Role"/></Column><Column id="hireDateColumn"><Text id="hireDateColumnText" text="Hire Date"/></Column><Column id="salaryColumn"><Text id="salaryColumnText" text="Salary"/></Column><Column id="actionsColumn"><Text id="actionsColumnText" text="Actions"/></Column></columns><items><ColumnListItem id="employeeListItem" type="Navigation" press="onEmployeePress"><cells><Text id="departmentCell" text="{department/name}"/><Text id="firstNameCell" text="{firstName}"/><Text id="lastNameCell" text="{lastName}"/><Link id="emailCell" text="{email}" href="mailto:{email}"/><Text id="roleCell" text="{role/name}"/><Text id="hireDateCell" text="{hireDate}"/><Text id="salaryCell" text="{salary}"/><Button id="actionsCell" icon="sap-icon://arrow-right" type="Transparent" press="onEmployeePress"><customData><core:CustomData key="id" value="{ID}"/></customData></Button></cells></ColumnListItem></items></Table></VBox></content></Page></mvc:View>',
	"ojtjava/view/OJT_Java.view.xml":'<mvc:View controllerName="ojtjava.controller.OJT_Java"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"><Page id="page1" title="{i18n>title}"></Page></mvc:View>',
	"ojtjava/view/fragment/ConfirmationDialog.fragment.xml":'<core:FragmentDefinition\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"><Dialog\n        id="confirmationDialog"\n        title="Confirmation"\n        icon="sap-icon://question-mark"\n        type="Message"><content><Text id="confirmationMessage" text="Are you want to submit the information?" class="sapUiSmallMarginTop sapUiSmallMarginBottom"/></content><beginButton><Button id="confirmButton" text="OK" type="Emphasized" press="onConfirmSubmit"/></beginButton><endButton><Button id="cancelButton" text="Cancel" press="onCancelSubmit"/></endButton></Dialog></core:FragmentDefinition>',
	"ojtjava/view/fragment/Header.fragment.xml":'<core:FragmentDefinition\n    xmlns="sap.m"\n    xmlns:core="sap.ui.core"><Toolbar id="appHeader" height="3rem" design="Solid"><content><Image id= \'img\' src="./img/Abeam_Logo.jpg" width="24px"/><Title id = \'title\' text="Abeam Consulting Vietnam" level="H3" class="sapUiTinyMarginBegin"/><ToolbarSpacer id= \'toolbarspacer\' /><Button id=\'inputFormButton\' text="Input Form" press=".onNavToInputForm"/><Button id=\'employeeListButton\' text="Employee List" press=".onNavToEmployeeList" class="sapUiTinyMarginBegin"/></content></Toolbar></core:FragmentDefinition>'
});
//# sourceMappingURL=Component-preload.js.map
